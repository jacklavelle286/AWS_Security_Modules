# tf-destroy.yml

trigger: none

parameters:
  - name: CustomerAccountId
    type: string
    default: ''
  - name: ServiceConnectionName
    type: string
    default: 'aws_tooling_service_connection'
  - name: Region
    type: string
    default: 'eu-west-2'

pool:
  vmImage: ubuntu-latest

jobs:
  - job: TerraformDestroyJob
    displayName: 'Terraform Destroy Job'
    steps:
      # Check out the repository code
      - checkout: self

      # Assume AWS Role and Set Credentials
      - task: AWSShellScript@1
        inputs:
          awsCredentials: ${{ parameters.ServiceConnectionName }}
          regionName: ${{ parameters.Region }}
          scriptType: 'inline'
          inlineScript: |
            # Construct Role ARN and S3 bucket name dynamically
            ROLE_ARN="arn:aws:iam::${{ parameters.CustomerAccountId }}:role/TFDeployBuildRole"
            S3_BUCKET_NAME="tf-backend-${{ parameters.CustomerAccountId }}-${{ parameters.Region }}"

            # Assume the specified role
            ROLE_OUTPUT=$(aws sts assume-role --role-arn "$ROLE_ARN" --role-session-name "DestroySession")

            if [ $? -ne 0 ]; then
              echo "Error assuming the role with ARN: $ROLE_ARN"
              exit 1
            fi

            # Extract credentials from the assume-role output
            export AWS_ACCESS_KEY_ID=$(echo $ROLE_OUTPUT | jq -r '.Credentials.AccessKeyId')
            export AWS_SECRET_ACCESS_KEY=$(echo $ROLE_OUTPUT | jq -r '.Credentials.SecretAccessKey')
            export AWS_SESSION_TOKEN=$(echo $ROLE_OUTPUT | jq -r '.Credentials.SessionToken')

            # Set the credentials as Azure DevOps pipeline variables
            echo "##vso[task.setvariable variable=ASSUMED_ACCESS_KEY_ID;issecret=true]$AWS_ACCESS_KEY_ID"
            echo "##vso[task.setvariable variable=ASSUMED_SECRET_ACCESS_KEY;issecret=true]$AWS_SECRET_ACCESS_KEY"
            echo "##vso[task.setvariable variable=ASSUMED_SESSION_TOKEN;issecret=true]$AWS_SESSION_TOKEN"
            echo "##vso[task.setvariable variable=S3_BUCKET_NAME]$S3_BUCKET_NAME"

            # Confirm identity for debugging purposes
            aws sts get-caller-identity
        displayName: 'Assume AWS Role and Set Credentials for Destroy'

      # Install Terraform
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        inputs:
          terraformVersion: 'latest'
        displayName: 'Install Terraform'

      # Terraform Init
      - task: TerraformCLI@2
        inputs:
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          commandOptions: '-reconfigure -backend-config="bucket=$(S3_BUCKET_NAME)" -backend-config="key=terraform.tfstate" -backend-config="region=${{ parameters.Region }}"'
        env:
          AWS_ACCESS_KEY_ID: $(ASSUMED_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(ASSUMED_SECRET_ACCESS_KEY)
          AWS_SESSION_TOKEN: $(ASSUMED_SESSION_TOKEN)
        displayName: 'Terraform Init'

      # Terraform Destroy
      - task: TerraformCLI@2
        inputs:
          command: 'destroy'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          commandOptions: '-auto-approve -input=false'
        env:
          AWS_ACCESS_KEY_ID: $(ASSUMED_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(ASSUMED_SECRET_ACCESS_KEY)
          AWS_SESSION_TOKEN: $(ASSUMED_SESSION_TOKEN)
        displayName: 'Terraform Destroy'
